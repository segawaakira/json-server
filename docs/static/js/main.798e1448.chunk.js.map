{"version":3,"sources":["theme/theme.ts","apis/todos.ts","components/TodoTitle.tsx","components/TodoAdd.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/App.tsx","hooks/useTodo.ts","reportWebVitals.ts","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","p","fontSize","base","md","lineHeight","todoDataUrl","getAllTodosData","a","axios","get","response","data","addTodoData","todo","post","deleteTodoData","id","delete","updateTodoData","put","TodoTitle","memo","title","as","mt","w","TodoAdd","placeholder","leftIcon","buttonText","inputEl","handleAddTodoListItem","bgColor","borderColor","ref","onClick","colorScheme","TodoItem","toggleTodoListItemStatus","deleteTodoListItem","label","done","setColorScheme","borderWidth","bg","borderRadius","mb","content","alignItems","justifyContent","variant","size","icon","TodoList","todoList","length","map","App","useState","setTodoList","useEffect","todoData","then","reverse","todoItem","find","item","newTodoItem","updatedTodo","newTodoList","addTodoListItem","todoContent","ulid","addTodo","deleteListItemId","filter","useTodo","useRef","inCompletedList","completedList","centerContent","maxWidth","current","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2LAiBeA,EAfDC,YAAY,CACxBC,OAAQ,CACNC,OAAQ,CACNC,KAAM,CACJC,gBAAiB,YACjBC,MAAO,YAETC,EAAG,CACDC,SAAU,CAAEC,KAAM,KAAMC,GAAI,MAC5BC,WAAY,Y,0FCTdC,EAAc,+CACPC,EAAe,uCAAG,4BAAAC,EAAA,sEACNC,IAAMC,IAAIJ,GADJ,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qDAKfC,EAAW,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACGC,IAAMM,KAAKT,EAAaQ,GAD3B,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAIXI,EAAc,uCAAG,WAAOC,GAAP,SAAAT,EAAA,sEACtBC,IAAMS,OAAN,UAAgBZ,EAAhB,YAA+BW,IADT,gCAErBA,GAFqB,2CAAH,sDAIdE,EAAc,uCAAG,WAAOF,EAASH,GAAhB,eAAAN,EAAA,sEACLC,IAAMW,IAAN,UAAad,EAAb,YAA4BW,GAAMH,GAD7B,cACtBH,EADsB,yBAErBA,EAASC,MAFY,2CAAH,wD,OCbdS,EAAYC,gBAAK,YAAkF,IAA/EC,EAA8E,EAA9EA,MAAOC,EAAuE,EAAvEA,GAAItB,EAAmE,EAAnEA,SAAUuB,EAAyD,EAAzDA,GACpD,OACE,cAAC,IAAD,CAASA,GAAIA,EAAID,GAAIA,EAAItB,SAAUA,EAAUwB,EAAE,OAA/C,SACGH,O,gBCJMI,EAAU,SAAC,GAYjB,IAXLC,EAWI,EAXJA,YACAC,EAUI,EAVJA,SACAC,EASI,EATJA,WACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,sBAQA,OACE,qCACE,cAAC,IAAD,CACEJ,YAAaA,EACbK,QAAQ,QACRR,GAAG,IACHS,YAAY,WACZC,IAAKJ,IAEP,cAAC,IAAD,CACEK,QAASJ,EACTK,YAAY,OACZR,SAAUA,EACVJ,GAAG,IAJL,SAMGK,QC3BIQ,EAAW,SAAC,GAAkI,IAAhIxB,EAA+H,EAA/HA,KAAMyB,EAAyH,EAAzHA,yBAA0BC,EAA+F,EAA/FA,mBAInDC,EAAQ3B,EAAK4B,KAAO,6CAAY,uCAChCC,EAAiB7B,EAAK4B,KAAO,OAAS,OAE5C,OACE,eAAC,IAAD,CACEE,YAAY,MACZ3C,EAAE,IACFwB,GAAG,IACHoB,GAAG,QACHC,aAAa,KACbZ,YAAY,WANd,UAQE,cAAC,IAAD,CAAMa,GAAG,IAAT,SAAcjC,EAAKkC,UACnB,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,WAAzC,UACE,cAAC,IAAD,CACEb,YAAaM,EACbQ,QAAQ,UACRC,KAAK,KACLhB,QArB+B,kBAAMG,EAAyBzB,EAAKG,GAAIH,EAAK4B,OAiB9E,SAMGD,IAEH,cAAC,IAAD,CACEY,KAAM,cAAC,IAAD,IACNF,QAAQ,WACR,aAAW,SACXf,QA5ByB,kBAAMI,EAAmB1B,EAAKG,cCApDqC,EAAW,SAAC,GAclB,IAbL/B,EAaI,EAbJA,MACAC,EAYI,EAZJA,GACAtB,EAWI,EAXJA,SACAqD,EAUI,EAVJA,SACAhB,EASI,EATJA,yBACAC,EAQI,EARJA,mBASA,OACE,mCACuB,IAApBe,EAASC,QACR,qCACE,cAACnC,EAAD,CAAWE,MAAOA,EAAOC,GAAIA,EAAItB,SAAUA,EAAUuB,GAAG,OACxD,cAAC,IAAD,CAAMC,EAAE,OAAR,SACG6B,EAASE,KAAI,SAAC3C,GAAD,OACZ,cAAC,EAAD,CACEA,KAAMA,EAENyB,yBAA0BA,EAC1BC,mBAAoBA,GAFf1B,EAAKG,eCyCXyC,MA3Df,WACE,MCNqB,WAErB,MAAgCC,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiBK,EAAjB,KAqCA,OAnCAC,qBAAU,WACRC,IAA2BC,MAAK,SAACjD,GAC/B8C,EAAY,YAAI9C,GAAMkD,gBAEvB,IA+BI,CACLT,WACAhB,yBA/B+B,SAACtB,EAASyB,GACzC,IAAMuB,EAAgBV,EAASW,MAAK,SAACC,GAAD,OAAeA,EAAKlD,KAAOA,KACzDmD,EAAgB,2BAAQH,GAAR,IAAkBvB,MAAOA,IAC/CoB,EAAwB7C,EAAImD,GAAaL,MAAK,SAACM,GAC7C,IAAMC,EAAmBf,EAASE,KAAI,SAACU,GAAD,OACpCA,EAAKlD,KAAOoD,EAAYpD,GAAKkD,EAAOE,KAEtCT,EAAYU,OAyBdC,gBAtBsB,SAACC,GACvB,IAAMJ,EAAc,CAClBpB,QAASwB,EACTvD,GAAIwD,cACJ/B,MAAM,GAER,OAAOoB,EAAqBM,GAAaL,MAAK,SAACW,GAC7Cd,EAAY,CAACc,GAAF,mBAAuBnB,SAgBpCf,mBAbyB,SAACvB,GAC1B6C,EAAwB7C,GAAI8C,MAAK,SAACY,GAChC,IAAML,EAAcf,EAASqB,QAC3B,SAACT,GAAD,OAAeA,EAAKlD,KAAO0D,KAE7Bf,EAAYU,QDxBZO,GAJFtB,EADF,EACEA,SACAgB,EAFF,EAEEA,gBACAhC,EAHF,EAGEA,yBACAC,EAJF,EAIEA,mBAGIT,EAAe+C,iBAAO,MAQtBC,EAAkBxB,EAASqB,QAAO,SAAC9D,GACvC,OAAQA,EAAK4B,QAGTsC,EAAgBzB,EAASqB,QAAO,SAAC9D,GACrC,OAAOA,EAAK4B,QAGd,OACE,eAAC,IAAD,CAAWuC,eAAa,EAAChF,EAAG,CAAEE,KAAM,IAAKC,GAAI,KAAO8E,SAAS,MAA7D,UACE,cAAC7D,EAAD,CACEE,MAAM,+BACNC,GAAG,KACHtB,SAAU,CAAEC,KAAM,MAAOC,GAAI,OAC7BqB,GAAG,MAEL,cAAC,EAAD,CACEG,YAAY,WACZC,SAAU,cAAC,IAAD,IACVC,WAAW,yBACXC,QAASA,EACTC,sBA3BwB,WACE,KAA1BD,EAAQoD,QAAQC,QACpBb,EAAgBxC,EAAQoD,QAAQC,OAChCrD,EAAQoD,QAAQC,MAAQ,OA0BtB,cAAC,EAAD,CACE7B,SAAUwB,EACVxC,yBAA0BA,EAC1BC,mBAAoBA,EACpBjB,MAAM,2CACNC,GAAG,KACHtB,SAAU,CAAEC,KAAM,KAAMC,GAAI,SAE9B,cAAC,EAAD,CACEmD,SAAUyB,EACVzC,yBAA0BA,EAC1BC,mBAAoBA,EACpBjB,MAAM,qCACNC,GAAG,KACHtB,SAAU,CAAEC,KAAM,KAAMC,GAAI,aElDrBiF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDRO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAgBvG,MAAOA,EAAvB,SACE,cAAC,EAAD,QAGJmG,GAEFR,M","file":"static/js/main.798e1448.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"orange.50\",\n        color: \"gray.800\",\n      },\n      p: {\n        fontSize: { base: \"md\", md: \"lg\" },\n        lineHeight: \"tall\"\n      }\n    }\n  }\n});\n\nexport default theme;","import axios from \"axios\";\n// const todoDataUrl = \"http://localhost:3100/todos\";\nconst todoDataUrl = \"https://test-segawa-json.herokuapp.com/todos\";\nexport const getAllTodosData = async () => {\n  const response = await axios.get(todoDataUrl);\n  return response.data;\n};\n\nexport const addTodoData = async (todo: any) => {\n  const response: any = await axios.post(todoDataUrl, todo);\n  return response.data;\n};\nexport const deleteTodoData = async (id: any) => {\n  await axios.delete(`${todoDataUrl}/${id}`);\n  return id;\n};\nexport const updateTodoData = async (id: any, todo: any) => {\n  const response = await axios.put(`${todoDataUrl}/${id}`, todo);\n  return response.data;\n};","import React, { memo } from \"react\";\nimport { Heading } from \"@chakra-ui/react\";\n\nexport const TodoTitle = memo(({ title, as, fontSize, mt }:{ title: any, as: any, fontSize: any, mt: any }) => {\n  return (\n    <Heading mt={mt} as={as} fontSize={fontSize} w=\"full\">\n      {title}\n    </Heading>\n  );\n});\n","import { Textarea, Button } from \"@chakra-ui/react\";\n\nexport const TodoAdd = ({\n  placeholder,\n  leftIcon,\n  buttonText,\n  inputEl,\n  handleAddTodoListItem\n}: {\n  placeholder: any,\n  leftIcon: any,\n  buttonText: any,\n  inputEl: any,\n  handleAddTodoListItem: any\n}) => {\n  return (\n    <>\n      <Textarea\n        placeholder={placeholder}\n        bgColor=\"white\"\n        mt=\"8\"\n        borderColor=\"gray.400\"\n        ref={inputEl}\n      />\n      <Button\n        onClick={handleAddTodoListItem}\n        colorScheme=\"blue\"\n        leftIcon={leftIcon}\n        mt=\"8\"\n      >\n        {buttonText}\n      </Button>\n    </>\n  );\n};\n","import { ListItem, Text, Flex, Button, IconButton } from \"@chakra-ui/react\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\n\nexport const TodoItem = ({ todo, toggleTodoListItemStatus, deleteTodoListItem }:{ todo: any, toggleTodoListItemStatus: any, deleteTodoListItem: any }) => {\n  const handleToggleTodoListItemStatus = () => toggleTodoListItemStatus(todo.id, todo.done);\n  const handleDeleteTodoListItem = () => deleteTodoListItem(todo.id);\n\n  const label = todo.done ? \"未完了リストへ\" : \"完了リストへ\";\n  const setColorScheme = todo.done ? \"pink\" : \"blue\";\n\n  return (\n    <ListItem\n      borderWidth=\"1px\"\n      p=\"4\"\n      mt=\"4\"\n      bg=\"white\"\n      borderRadius=\"md\"\n      borderColor=\"gray.300\"\n    >\n      <Text mb=\"6\">{todo.content}</Text>\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Button\n          colorScheme={setColorScheme}\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={handleToggleTodoListItemStatus}\n        >\n          {label}\n        </Button>\n        <IconButton\n          icon={<DeleteIcon />}\n          variant=\"unstyled\"\n          aria-label=\"delete\"\n          onClick={handleDeleteTodoListItem}\n        />\n      </Flex>\n    </ListItem>\n  );\n};\n","import { List } from \"@chakra-ui/react\";\n\nimport { TodoTitle } from \"./TodoTitle\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport const TodoList = ({\n  title,\n  as,\n  fontSize,\n  todoList,\n  toggleTodoListItemStatus,\n  deleteTodoListItem\n}: {\n  title: any,\n  as: any,\n  fontSize: any,\n  todoList: any,\n  toggleTodoListItemStatus: any,\n  deleteTodoListItem: any\n}) => {\n  return (\n    <>\n      {todoList.length !== 0 && (\n        <>\n          <TodoTitle title={title} as={as} fontSize={fontSize} mt=\"12\" />\n          <List w=\"full\">\n            {todoList.map((todo: any) => (\n              <TodoItem\n                todo={todo}\n                key={todo.id}\n                toggleTodoListItemStatus={toggleTodoListItemStatus}\n                deleteTodoListItem={deleteTodoListItem}\n              />\n            ))}\n          </List>\n        </>\n      )}\n    </>\n  );\n};\n","import React, { useRef } from \"react\";\n\nimport { Container } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\n\nimport { useTodo } from \"../hooks/useTodo\";\n\nimport { TodoTitle } from \"./TodoTitle\";\nimport { TodoAdd } from \"./TodoAdd\";\nimport { TodoList } from \"./TodoList\";\n\nfunction App() {\n  const {\n    todoList,\n    addTodoListItem,\n    toggleTodoListItemStatus,\n    deleteTodoListItem\n  } = useTodo();\n\n  const inputEl: any = useRef(null);\n\n  const handleAddTodoListItem = () => {\n    if (inputEl.current.value === \"\") return;\n    addTodoListItem(inputEl.current.value);\n    inputEl.current.value = \"\";\n  };\n\n  const inCompletedList = todoList.filter((todo: any) => {\n    return !todo.done;\n  });\n\n  const completedList = todoList.filter((todo: any) => {\n    return todo.done;\n  });\n\n  return (\n    <Container centerContent p={{ base: \"4\", md: \"6\" }} maxWidth=\"3xl\">\n      <TodoTitle\n        title=\"TODO進捗管理\"\n        as=\"h1\"\n        fontSize={{ base: \"2xl\", md: \"3xl\" }}\n        mt=\"0\"\n      />\n      <TodoAdd\n        placeholder=\"ADD TODO\"\n        leftIcon={<AddIcon />}\n        buttonText=\"TODOを追加\"\n        inputEl={inputEl}\n        handleAddTodoListItem={handleAddTodoListItem}\n      />\n      <TodoList\n        todoList={inCompletedList}\n        toggleTodoListItemStatus={toggleTodoListItemStatus}\n        deleteTodoListItem={deleteTodoListItem}\n        title=\"未完了TODOリスト\"\n        as=\"h2\"\n        fontSize={{ base: \"xl\", md: \"2xl\" }}\n      />\n      <TodoList\n        todoList={completedList}\n        toggleTodoListItemStatus={toggleTodoListItemStatus}\n        deleteTodoListItem={deleteTodoListItem}\n        title=\"完了TODOリスト\"\n        as=\"h2\"\n        fontSize={{ base: \"xl\", md: \"2xl\" }}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nimport { ulid } from \"ulid\";\n\nimport * as todoData from \"../apis/todos\";\n\nexport const useTodo = () => {\n\n  const [todoList, setTodoList] = useState([]);\n\n  useEffect(() => {\n    todoData.getAllTodosData().then((todo: never[]) => {\n      setTodoList([...todo].reverse());\n    });\n  }, []);\n\n  const toggleTodoListItemStatus = (id: any, done: any) => {\n    const todoItem: any = todoList.find((item: any) => item.id === id);\n    const newTodoItem: any = { ...todoItem, done: !done };\n    todoData.updateTodoData(id, newTodoItem).then((updatedTodo: any) => {\n      const newTodoList: any = todoList.map((item: any) =>\n        item.id !== updatedTodo.id ? item : updatedTodo\n      );\n      setTodoList(newTodoList);\n    });\n  };\n  const addTodoListItem = (todoContent: any) => {\n    const newTodoItem = {\n      content: todoContent,\n      id: ulid(),\n      done: false\n    };\n    return todoData.addTodoData(newTodoItem).then((addTodo) => {\n      setTodoList([addTodo as never, ...todoList]);\n    });\n  };\n  const deleteTodoListItem = (id: any) => {\n    todoData.deleteTodoData(id).then((deleteListItemId: any) => {\n      const newTodoList = todoList.filter(\n        (item: any) => item.id !== deleteListItemId\n      );\n      setTodoList(newTodoList);\n    });\n  };\n\n  return {\n    todoList,\n    toggleTodoListItemStatus,\n    addTodoListItem,\n    deleteTodoListItem\n  };\n};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme/theme\";\n\nimport App from \"./components/App\";\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </StrictMode>,\n  rootElement\n);\nreportWebVitals();"],"sourceRoot":""}